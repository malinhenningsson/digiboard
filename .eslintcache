[{"/Applications/Ampps/www/Exmanesarbete/digiboard/src/index.js":"1","/Applications/Ampps/www/Exmanesarbete/digiboard/src/App.js":"2","/Applications/Ampps/www/Exmanesarbete/digiboard/src/components/ToolPicker.js":"3","/Applications/Ampps/www/Exmanesarbete/digiboard/src/components/Chat.js":"4","/Applications/Ampps/www/Exmanesarbete/digiboard/src/components/Whiteboard.js":"5","/Applications/Ampps/www/Exmanesarbete/digiboard/src/screens/Room.js":"6","/Applications/Ampps/www/Exmanesarbete/digiboard/src/screens/Lobby.js":"7","/Applications/Ampps/www/Exmanesarbete/digiboard/src/screens/NotFound.js":"8","/Applications/Ampps/www/Exmanesarbete/digiboard/src/components/Canvas.js":"9","/Applications/Ampps/www/Exmanesarbete/digiboard/src/contexts/PubNubContext.js":"10"},{"size":199,"mtime":1608555786322,"results":"11","hashOfConfig":"12"},{"size":676,"mtime":1608576101021,"results":"13","hashOfConfig":"12"},{"size":1987,"mtime":1608539051494,"results":"14","hashOfConfig":"12"},{"size":2067,"mtime":1608543176423,"results":"15","hashOfConfig":"12"},{"size":469,"mtime":1608577578012,"results":"16","hashOfConfig":"12"},{"size":1043,"mtime":1608577860823,"results":"17","hashOfConfig":"12"},{"size":1009,"mtime":1608578145154,"results":"18","hashOfConfig":"12"},{"size":153,"mtime":1608222605971,"results":"19","hashOfConfig":"12"},{"size":2012,"mtime":1608549209819,"results":"20","hashOfConfig":"12"},{"size":1773,"mtime":1608577992887,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"3g9ax2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Applications/Ampps/www/Exmanesarbete/digiboard/src/index.js",[],["47","48"],"/Applications/Ampps/www/Exmanesarbete/digiboard/src/App.js",[],"/Applications/Ampps/www/Exmanesarbete/digiboard/src/components/ToolPicker.js",[],"/Applications/Ampps/www/Exmanesarbete/digiboard/src/components/Chat.js",["49"],"import React, { useEffect, useState, useRef } from 'react'\n\nconst Chat = ({ username }) => {\n    const [ownUsername, setOwnUsername] = useState('Anonymous');\n    const [message, setMessage] = useState('');\n    const [messageList, setMessageList] = useState([]);\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        setOwnUsername(username);\n    }, [])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let list = messageList;\n        list.push(message);\n\n        setMessageList(list);\n        setMessage('');\n        inputRef.current.value = \"\";\n        \n        // Need to fix better solution to scroll into view, not optimal.\n        document.querySelector(\"#chat-input\").scrollIntoView();\n    }\n\n    return (\n        <div id=\"chat-wrapper\">\n            <div className=\"online-users\">\n                <h1 className=\"bold\">Online:</h1>\n                <ul>\n                    <li>{ownUsername} (You)</li>\n                </ul>\n            </div>\n            <div id=\"chat-msg-box\">\n                <ul>\n                    {/* <li className=\"your-msg\"><span className=\"bold\">{username}:</span> Hello!</li>\n                    <li className=\"others-msg\"><span className=\"bold\">{username}:</span> Hey!</li>\n                    <li className=\"others-msg\"><span className=\"bold\">{username}:</span> Whats up?</li> */}\n                    {\n                        messageList.map((message, index) => (\n                            <li key={index} className=\"your-msg\"><span className=\"bold\">{username}:</span> {message}</li>\n                        ))\n                    }\n                </ul>\n                <form onSubmit={handleSubmit}>\n                    <input \n                        id=\"chat-input\"\n                        type=\"text\" \n                        placeholder=\"Chat with the other users\"\n                        ref={inputRef} \n                        onChange={(e) => setMessage(e.target.value)} \n                        />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","/Applications/Ampps/www/Exmanesarbete/digiboard/src/components/Whiteboard.js",[],"/Applications/Ampps/www/Exmanesarbete/digiboard/src/screens/Room.js",["50","51"],"import React, { useEffect, useState} from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Col, Row } from 'react-bootstrap';\nimport Whiteboard from '../components/Whiteboard';\nimport Chat from '../components/Chat';\nimport { usePubnub } from '../contexts/PubNubContext';\n\nconst Room = () => {\n    const location = useLocation();\n    const { channelId } = useParams();\n    const { publishToChannel } = usePubnub();\n\n    useEffect(() => {\n        publishToChannel(channelId, location.state.username + ' is in the room')\n    }, [])\n\n    return (\n        <>\n            <Row>\n                <Col sm={12} md={9} lg={9}>\n                    <Whiteboard username={location.state && location.state.username ? location.state.username : \"Anonymous\"} />\n                </Col>\n                <Col sm={0} md={3} lg={3}>\n                    <Chat username={location.state && location.state.username ? location.state.username : \"Anonymous\"} />\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Room\n","/Applications/Ampps/www/Exmanesarbete/digiboard/src/screens/Lobby.js",[],"/Applications/Ampps/www/Exmanesarbete/digiboard/src/screens/NotFound.js",[],"/Applications/Ampps/www/Exmanesarbete/digiboard/src/components/Canvas.js",["52"],"import { useEffect, useRef, useState } from 'react';\n\nconst Canvas = ({ parentRef, color }) => {\n    const canvasRef = useRef(null);\n    const [ctx, setCtx] = useState({});\n    const [drawing, setDrawing] = useState(false);\n    const [position, setPosition] = useState({ x: 0, y: 0 });\n    const [canvasOffset, setCanvasOffset] = useState({ x: 0, y: 0 });\n\n    useEffect(() => {\n        let canv = canvasRef.current;\n        canv.width = parentRef.current.offsetWidth;\n        canv.height = parentRef.current.offsetHeight;\n\n        // Set up canvas context\n        let canvContext = canv.getContext('2d');\n        canvContext.lineJoin = \"round\";\n        canvContext.lineCap = \"round\";\n        canvContext.lineWidth = 5;\n        setCtx(canvContext);\n\n        // Record canvas left and top offset \n        let offset = canv.getBoundingClientRect();\n        setCanvasOffset({ x: parseInt(offset.left), y: parseInt(offset.top) });\n    }, [ctx]);\n\n    // Start drawing\n    const handleMouseDown = (e) => {\n        setDrawing(true);\n\n        setPosition({\n            x: parseInt(e.clientX - canvasOffset.x),\n            y: parseInt(e.clientY - canvasOffset.y),\n          });\n    }\n\n    // End drawing\n    const handleMouseUp = (e) => {\n        setDrawing(false);\n    }\n\n    // Handle drawing activity\n    const handleMouseMove = (e) => {\n        let mousex = e.clientX - canvasOffset.x;\n        let mousey = e.clientY - canvasOffset.y;\n\n        if (drawing) {\n            ctx.strokeStyle = color;\n            ctx.beginPath();\n            ctx.moveTo(position.x, position.y);\n            ctx.lineTo(mousex, mousey);\n            ctx.stroke();\n        }\n        setPosition({ x: mousex, y: mousey });\n    }\n \n    return (\n        <div id=\"canvas-wrapper\" ref={parentRef}>\n            <canvas \n                ref={canvasRef} \n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}\n                onMouseMove={handleMouseMove}\n            />\n        </div>\n    )\n}\n\nexport default Canvas\n","/Applications/Ampps/www/Exmanesarbete/digiboard/src/contexts/PubNubContext.js",["53","54"],"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport PubNub from 'pubnub';\n\nconst PubNubContext = createContext();\n\nconst usePubnub = () => {\n    const context = useContext(PubNubContext);\n    if (context === undefined) {\n        throw new Error('`usePubNub` hook must be used within a `PubNubContextProvider` component');\n    }\n    return context;\n}\n\nconst PubNubContextProvider = (props) => {\n    const newUUID = PubNub.generateUUID();\n    const pubnub = new PubNub({\n        publishKey: process.env.REACT_APP_PUBNUB_PUBLISH_KEY,\n        subscribeKey: process.env.REACT_APP_PUBNUB_SUBSCRIBE_KEY,\n        ssl: true,\n        uuid: newUUID,\n    });\n\n    const subscribeToChannel = (roomname) => {\n        pubnub.subscribe({\n            channels: [roomname]\n        });\n\n        pubnub.addListener({\n            status(event) {\n                if (event.category === \"PNConnectedCategory\") {\n                    console.log('connected', event);\n                }\n            },\n            message(msg) {\n                console.log(msg.message);\n            },\n            presence(response) {\n                console.log(response);\n            }\n        });\n    };\n\n    const publishToChannel = (roomname, message) => {\n        const publishConfig = {\n            channel: roomname,\n            message\n        };\n        pubnub.publish(publishConfig, (status, response) => {\n            console.log(\"status\", status);\n            console.log(\"response\", response);\n        })\n    }\n\n    return (\n        <PubNubContext.Provider value={{ usePubnub, pubnub, subscribeToChannel, publishToChannel }}>\n            {props.children}\n        </PubNubContext.Provider>\n    )\n}\n\nexport { PubNubContext, usePubnub, PubNubContextProvider as default }\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":11,"column":8,"nodeType":"61","endLine":11,"endColumn":10,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":28,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"67","line":15,"column":8,"nodeType":"61","endLine":15,"endColumn":10,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"69","line":25,"column":8,"nodeType":"61","endLine":25,"endColumn":13,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"71","line":1,"column":44,"nodeType":"65","messageId":"66","endLine":1,"endColumn":53},{"ruleId":"63","severity":1,"message":"64","line":1,"column":55,"nodeType":"65","messageId":"66","endLine":1,"endColumn":63},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array. If 'setOwnUsername' needs the current value of 'username', you can also switch to useReducer instead of useState and read 'username' in the reducer.","ArrayExpression",["74"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'channelId', 'location.state.username', and 'publishToChannel'. Either include them or remove the dependency array.",["75"],"React Hook useEffect has a missing dependency: 'parentRef'. Either include it or remove the dependency array.",["76"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [username]",{"range":"83","text":"84"},"Update the dependencies array to be: [channelId, location.state.username, publishToChannel]",{"range":"85","text":"86"},"Update the dependencies array to be: [ctx, parentRef]",{"range":"87","text":"88"},[361,363],"[username]",[553,555],"[channelId, location.state.username, publishToChannel]",[934,939],"[ctx, parentRef]"]